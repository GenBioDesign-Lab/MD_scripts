#############################################################
## JOB DESCRIPTION                                         ##
#############################################################

# {{ job_description }}


#############################################################
## ADJUSTABLE PARAMETERS                                   ##
#############################################################

structure          {{ structure_file }}
coordinates        {{ coordinates_file }}
{% if stage != 'minimization' %}
extendedSystem     {{ extended_system_file }}
{% endif %}
{% if stage == 'production' %}
velocities         {{ velocities_file }}
{% endif %}

set temperature    {{ temperature }}
set outputname     {{ output_name }}

firsttimestep      {{ first_timestep }}


#############################################################
## SIMULATION PARAMETERS                                   ##
#############################################################

# Input
paraTypeCharmm     on
{% if parameters_files is defined and parameters_files|length > 0 %}
{% for param_file in parameters_files %}
parameters         {{ param_file }}
{% endfor %}
{% else %}
parameters         {{ parameters_file }}
{% endif %}
{% if stage != 'production' %}
temperature        $temperature
{% endif %}

# Force-Field Parameters
exclude            scaled1-4
oneFourScaling     1.0
{% if stage == 'production' %}
nonbondedScaling   {{ nonbonded_scaling }}
{% endif %}
cutoff             {{ cutoff }}
switching          on
switchdist         {{ switch_dist }}
pairlistdist       {{ pairlist_dist }}

# Integrator Parameters
{% if stage == 'equilibration' or stage.startswith('eq') %}
timestep           {{ timestep if timestep is defined else 1.0 }}  ;# reduced timestep for equilibration
{% else %}
timestep           {{ timestep }}  ;# 2fs/step
{% endif %}
rigidBonds         all  ;# needed for 2fs steps
nonbondedFreq      {{ nonbonded_freq }}
fullElectFrequency {{ full_elect_frequency }}  
stepspercycle      {{ steps_per_cycle }}

# Periodic Boundary Conditions
cellBasisVector1   {{ cell_basis_vector1 }}
cellBasisVector2   {{ cell_basis_vector2 }}
cellBasisVector3   {{ cell_basis_vector3 }}
cellOrigin         {{ cell_origin }}

# PME (for full-system periodic electrostatics)
PME                yes
PMEGridSpacing     {{ pme_grid_spacing }}

#manual grid definition
#PMEGridSizeX      {{ pme_grid_size_x }}
#PMEGridSizeY      {{ pme_grid_size_y }}
#PMEGridSizeZ      {{ pme_grid_size_z }}

wrapAll            on

# Constant Temperature Control
langevin           on    ;# do langevin dynamics
langevinDamping    {{ langevin_damping }}     ;# damping coefficient (gamma) of 1/ps
langevinTemp       $temperature
langevinHydrogen   off    ;# don't couple langevin bath to hydrogens

# Constant Pressure Control (variable volume)
useGroupPressure   yes ;# needed for rigidBonds
useFlexibleCell    {{ use_flexible_cell|yesno }}  ;# yes for membrane systems
useConstantRatio   {{ use_constant_ratio|yesno }}
useConstantArea    {{ use_constant_area|yesno }}

langevinPiston        on
langevinPistonTarget  {{ langevin_piston_target }} ;# in bar -> 1 atm
langevinPistonPeriod  {{ langevin_piston_period }}
langevinPistonDecay   {{ langevin_piston_decay }}
langevinPistonTemp    $temperature

# Output
outputName         $outputname
{% if stage == 'production' %}
XSTfile            $outputname.xst
{% endif %}

restartfreq        {{ restart_freq }}     ;#500steps = 1ps
dcdfreq            {{ dcd_freq }}
{% if stage == 'production' %}
XSTfreq            {{ xst_freq }}
{% endif %}
outputEnergies     {{ output_energies }}
outputPressure     {{ output_pressure }}

binaryoutput       no
binaryrestart      no

#############################################################
## EXTRA PARAMETERS                                        ##
#############################################################

{% if use_restraints and (stage in ['minimization', 'equilibration'] or stage.startswith('eq')) %}
# Membrane restraints
{% if membrane_planar_fc is defined and membrane_planar_fc > 0 and colvar_file is defined %}
# Planar restraints for membrane leaflets
colvars on
exec sed -e "s/\$fc/{{ membrane_planar_fc }}/g" {{ colvar_file }} > $outputname.colvars
colvarsConfig $outputname.colvars
{% endif %}

{% if membrane_dihedral_fc is defined and membrane_dihedral_fc > 0 and dihedral_file is defined %}
# Dihedral restraints for lipid tails
exec sed -e "s/\$FC/{{ membrane_dihedral_fc }}/g" {{ dihedral_file }} > $outputname.dihe
extraBonds yes
extraBondsFile $outputname.dihe
{% endif %}

{% if membrane_planar_fc is defined and membrane_planar_fc == 0 and membrane_dihedral_fc is defined and membrane_dihedral_fc == 0 %}
# No restraints in this stage
{% endif %}
{% endif %}

{% if stage == 'equilibration' or stage.startswith('eq') %}
margin             {{ margin }}
{% endif %}

#############################################################
## EXECUTION SCRIPT                                        ##
#############################################################

{% if stage == 'minimization' %}
# Minimization
minimize           {{ num_minimize_steps }}
{% else %}
# {% if stage == 'equilibration' or stage.startswith('eq') %}Equilibration{% else %}Production{% endif %}

numsteps           {{ num_steps }}        # Number of integration steps
{% endif %} 